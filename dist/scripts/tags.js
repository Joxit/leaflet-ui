/*!
 * tile-server-ui
 * Copyright (C) 2016-2017  Jones Magloire @Joxit
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
riot.tag2("add",'<material-popup name="add-tile-server-dialog"> <div class="material-popup-title">Add a new Tile Server to your list ?</div> <div class="material-popup-content"> <material-input name="tile-server-link" placeholder="Tile Server URL"></material-input> <span for="tile-server-link">Use leaflet notation eg: http://url/\\{z\\}/\\{x\\}/\\{y\\}.png</span> </div> <div class="material-popup-action"> <material-button class="dialog-button" waves-color="rgba(158,158,158,.4)" onclick="leafletUI.addTag.add();">Add</material-button> <material-button class="dialog-button" waves-color="rgba(158,158,158,.4)" onclick="leafletUI.addTag.addAndSet();">Set</material-button> <material-button class="dialog-button" waves-color="rgba(158,158,158,.4)" onclick="leafletUI.addTag.dialog.close();">Cancel</material-button> </div> </material-popup>',"","",function(e){leafletUI.addTag=leafletUI.addTag||{},leafletUI.addTag.update=this.update,leafletUI.addTag.add=function(){leafletUI.addTag.tileServerList.value&&leafletUI.addTag.tileServerList.value.length>0?(addTileServer(leafletUI.addTag.tileServerList.value),leafletUI.snackbar(leafletUI.addTag.tileServerList.value+" has been added.",!1)):leafletUI.snackbar("Nothing to add.",!1),leafletUI.addTag.tileServerList.value="",leafletUI.addTag.dialog.close()},leafletUI.addTag.addAndSet=function(){leafletUI.addTag.tileServerList.value&&leafletUI.addTag.tileServerList.value.length>0?(addTileServer(leafletUI.addTag.tileServerList.value),changeTileServer(leafletUI.addTag.tileServerList.value),leafletUI.tileServer.layer.setUrl(leafletUI.addTag.tileServerList.value),leafletUI.snackbar(leafletUI.addTag.tileServerList.value+" has been setted.",!1)):leafletUI.snackbar("Nothing to set.",!1),leafletUI.addTag.tileServerList.value="",leafletUI.addTag.dialog.close()},this.on("updated",function(){leafletUI.addTag.dialog=this.tags["add-tile-server-dialog"],leafletUI.addTag.tileServerList=leafletUI.addTag.dialog.tags["tile-server-link"]})}),riot.tag2("app",'<add></add> <change></change> <remove></remove> <tile-bound></tile-bound> <material-snackbar name="snackbar"></material-snackbar> </app> </script>',"","",function(e){this.mixin("rg.router"),this.router.add({name:"home",url:"/:z/:lat/:lng"}),this.router.on("go",e=>{switch(e=e||{},e.params=e.params||{},e.name){case"home":var a=isNaN(e.params.z)||0==e.params.z.length?13:e.params.z,l=isNaN(e.params.lat)||0==e.params.lat.length?48.8552168:e.params.lat,t=isNaN(e.params.lng)||0==e.params.lng.length?2.3482104:e.params.lng;this.isViewSetted||(leafletUI.map.setView(L.latLng(l,t),a),this.isViewSetted=!0)}}),this.router.on("start",function(){this.current||this.go("home")}),leafletUI.map.on("moveend tilelayersload",function(){var e=leafletUI.map.getCenter();e.z=leafletUI.map.getZoom(),rg.router.go("home",e)});var a=this.tags;leafletUI.snackbar=function(e,l){a.snackbar.addToast({message:e,isError:l})},this.router.start()}),riot.tag2("change",'<material-popup name="change-tile-server-dialog"> <div class="material-popup-title">Change your Tile Server ?</div> <div class="material-popup-content"> <div class="select-padding"> <select name="tile-server-list" id="tile-server-list"> <option each="{url in leafletUI.tileServer.servers}" value="{url}">{url}</option> </select> </div> </div> <div class="material-popup-action"> <material-button class="dialog-button" waves-color="rgba(158,158,158,.4)" onclick="leafletUI.changeTag.change();">Change</material-button> <material-button class="dialog-button" waves-color="rgba(158,158,158,.4)" onclick="leafletUI.changeTag.overlay();">Overlay</material-button> <material-button class="dialog-button" waves-color="rgba(158,158,158,.4)" onclick="leafletUI.changeTag.close();">Cancel</material-button> </div> </material-popup>',"","",function(e){leafletUI.changeTag=leafletUI.changeTag||{},leafletUI.changeTag.update=this.update,leafletUI.changeTag.close=function(){leafletUI.changeTag.dialog.close(),leafletUI.changeTag.update()},leafletUI.changeTag.change=function(){var e=leafletUI.changeTag.tileServerList.value;changeTileServer(e),leafletUI.tileServer.layer.setUrl(e),leafletUI.changeTag.close()},leafletUI.changeTag.overlay=function(){var e=leafletUI.changeTag.tileServerList.value;localStorage.setItem("tileServerOverlay",JSON.stringify(e)),leafletUI.tileServer.overlay.setUrl(e),leafletUI.changeTag.close()},leafletUI.changeTag.show=function(){leafletUI.changeTag.update(),leafletUI.changeTag.tileServerList&&(leafletUI.changeTag.tileServerList.value=leafletUI.tileServer.url()),leafletUI.changeTag.dialog.open()},this.on("updated",function(){leafletUI.changeTag.dialog=this.tags["change-tile-server-dialog"],leafletUI.changeTag.tileServerList=leafletUI.changeTag.dialog["tile-server-list"]})}),riot.tag2("dropdown-menu",'<div id="menu-control-container"> <material-button id="menu-control-button" name="menu-control-button" waves-center="true" rounded="true" waves-opacity="0.6" waves-duration="600"> <i class="material-icons">more_vert</i> </material-button> <material-dropdown id="menu-control-dropdown" name="menu-control-dropdown" for="menu-control-button"> <p onclick="leafletUI.menuTag.onChangeClick();">Change url</p> <p onclick="leafletUI.menuTag.onRemoveClick();">Remove url</p> <p onclick="leafletUI.menuTag.onTileBoundClick();">Tile Bound</p> </material-dropdown> </div>',"","",function(e){var a=this;leafletUI.menuTag=leafletUI.menuTag||{},leafletUI.menuTag.update=this.update,leafletUI.menuTag.onChangeClick=function(){leafletUI.changeTag.show(),a.tags["menu-control-dropdown"].close()},leafletUI.menuTag.onRemoveClick=function(){leafletUI.removeTag.show(),a.tags["menu-control-dropdown"].close()},leafletUI.menuTag.onTileBoundClick=function(){leafletUI.tileBoundTag.show(),a.tags["menu-control-dropdown"].close()},this.on("update",function(){this["menu-control-button"].onclick=function(){a.tags["menu-control-dropdown"].opened?a.tags["menu-control-dropdown"].close():a.tags["menu-control-dropdown"].open()}})}),riot.tag2("remove",'<material-popup name="remove-tile-server-dialog"> <div class="material-popup-title">Remove your Tile Server ?</div> <div class="material-popup-content"> <ul> <li each="{url in leafletUI.tileServer.servers}"> <span> <a href="#" class="selectable" onclick="leafletUI.removeTag.removeUrl(\'{btoa(url)}\');"> <i class="material-icons">delete</i> </a> <span class="url">{url}</span> </span> </li> </ul> </div> <div class="material-popup-action"> <material-button class="dialog-button" waves-color="rgba(158,158,158,.4)" onclick="leafletUI.removeTag.overlay();">Unset overlay</material-button> <material-button class="dialog-button" waves-color="rgba(158,158,158,.4)" onclick="leafletUI.removeTag.close();">Close</material-button> </div> </material-popup>',"","",function(e){leafletUI.removeTag=leafletUI.removeTag||{},leafletUI.removeTag.update=this.update,leafletUI.removeTag.removeUrl=function(e){e=atob(e),removeTileServer(e),leafletUI.snackbar(e+" has been removed.",!1),leafletUI.removeTag.update()},leafletUI.removeTag.close=function(){leafletUI.removeTag.dialog.close(),leafletUI.removeTag.update()},leafletUI.removeTag.show=function(){leafletUI.removeTag.update(),leafletUI.removeTag.dialog.open()},leafletUI.removeTag.overlay=function(){localStorage.setItem("tileServerOverlay",""),leafletUI.tileServer.overlay.setUrl("")},this.on("updated",function(){leafletUI.removeTag.dialog=this.tags["remove-tile-server-dialog"]})}),riot.tag2("tile-bound",'<material-popup name="tile-bound-dialog"> <div class="material-popup-title">Show/hide tiles bounds ?</div> <div class="material-popup-content"> <material-checkbox class="margin-8" name="check-box"> Show tiles bounds. </material-checkbox> <div class="on-line margin-8"> <material-checkbox name="meta-check-box"> </material-checkbox> <material-input name="meta-tile-size" value="{leafletUI.tileBoundTag.metaTileSize.value}" valid="/^\\d*$/" label="Meta Tiles size"></material-input> </div> </div> <div class="material-popup-action"> <material-button class="dialog-button" waves-color="rgba(158,158,158,.4)" onclick="leafletUI.tileBoundTag.dialog.close();">Close</material-button> </div> </material-popup>',"","",function(e){leafletUI.tileBoundTag=leafletUI.tileBoundTag||{},leafletUI.tileBoundTag.update=this.update,leafletUI.tileBoundTag.toggleBounds=function(e){e?leafletUI.tileBoundTag.tileBoundGridLayer.addTo(leafletUI.map):leafletUI.tileBoundTag.tileBoundGridLayer.remove(),localStorage.setItem("tileBounds",e)},leafletUI.tileBoundTag.toggleMetaBounds=function(e){e?leafletUI.tileBoundTag.metaTileBoundGridLayer.addTo(leafletUI.map):leafletUI.tileBoundTag.metaTileBoundGridLayer.remove(),localStorage.setItem("metaTileBounds",e)},leafletUI.tileBoundTag.show=function(){leafletUI.tileBoundTag.update(),leafletUI.tileBoundTag.dialog.open()},leafletUI.tileBoundTag.TileBoundGridLayer=L.GridLayer.extend({createTile:function(e){var a=L.DomUtil.create("div","tile-bound");return a.innerHTML="x:"+e.x+"<br \\>y:"+e.y+"<br \\>z:"+e.z,a.style.border="1px dashed #444",a.style["box-shadow"]="0 0 1px #fff",a}}),leafletUI.tileBoundTag.MetaTileBoundGridLayer=L.GridLayer.extend({createTile:function(e){if(!leafletUI.tileBoundTag.metaTileSize.value||isNaN(leafletUI.tileBoundTag.metaTileSize.value.length))return L.DomUtil.create("div","meta-tile-bound");var a=leafletUI.tileBoundTag.metaTileSize.value,l="2px dotted #a44",t=L.DomUtil.create("div","meta-tile-bound");return e.x%a==0&&(t.style["border-left"]=l),e.x%a==a-1&&(t.style["border-right"]=l),e.y%a==0&&(t.style["border-top"]=l),e.y%a==a-1&&(t.style["border-bottom"]=l),t}}),leafletUI.tileBoundTag.tileBoundGridLayer=new leafletUI.tileBoundTag.TileBoundGridLayer(leafletUI.map),leafletUI.tileBoundTag.metaTileBoundGridLayer=new leafletUI.tileBoundTag.MetaTileBoundGridLayer(leafletUI.map),this.on("mount",function(){leafletUI.tileBoundTag.dialog=this.tags["tile-bound-dialog"],leafletUI.tileBoundTag.checkBox=leafletUI.tileBoundTag.dialog.tags["check-box"],leafletUI.tileBoundTag.metaCheckBox=leafletUI.tileBoundTag.dialog.tags["meta-check-box"],leafletUI.tileBoundTag.metaTileSize=leafletUI.tileBoundTag.dialog.tags["meta-tile-size"],leafletUI.tileBoundTag.dialog["meta-tile-size"].onkeypress=function(e){"Enter"===e.key&&(leafletUI.tileBoundTag.metaCheckBox.checked?leafletUI.tileBoundTag.metaTileBoundGridLayer.redraw():(leafletUI.tileBoundTag.metaCheckBox.checked=!0,leafletUI.tileBoundTag.metaCheckBox.update(),leafletUI.tileBoundTag.toggleMetaBounds(!0)))};var e=localStorage.getItem("tileBounds");"true"==e&&(leafletUI.tileBoundTag.checkBox.checked=!0,leafletUI.tileBoundTag.toggleBounds(!0));var a=localStorage.getItem("metaTileSize");isNaN(a)||(leafletUI.tileBoundTag.metaTileSize.value=a,leafletUI.tileBoundTag.metaTileSize.update());var l=localStorage.getItem("metaTileBounds");"true"==l&&(leafletUI.tileBoundTag.metaCheckBox.checked=!0,leafletUI.tileBoundTag.toggleMetaBounds(!0)),leafletUI.tileBoundTag.checkBox.on("toggle",leafletUI.tileBoundTag.toggleBounds),leafletUI.tileBoundTag.metaCheckBox.on("toggle",leafletUI.tileBoundTag.toggleMetaBounds),leafletUI.tileBoundTag.metaTileSize.on("valueChanged",function(){leafletUI.tileBoundTag.metaCheckBox.checked&&leafletUI.tileBoundTag.metaTileBoundGridLayer.redraw(),localStorage.setItem("metaTileSize",leafletUI.tileBoundTag.metaTileSize.value)})})});