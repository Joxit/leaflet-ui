/*!
 * tile-server-ui
 * Copyright (C) 2016-2017  Jones Magloire @Joxit
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var leafletUI={};leafletUI.map=L.map("map",{zoomControl:!1}),leafletUI.tileServer={},leafletUI.tileServer.getServers=function(e){try{var t=JSON.parse(localStorage.getItem("tileServer"));if(t instanceof Array)return e?t[e]:t}catch(e){}return e?"":[]},leafletUI.tileServer.servers=leafletUI.tileServer.getServers(),leafletUI.tileServer.url=function(){return leafletUI.tileServer.servers&&leafletUI.tileServer.servers.length>0&&leafletUI.tileServer.servers[0]&&leafletUI.tileServer.servers[0].length>0?leafletUI.tileServer.servers[0]:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"},leafletUI.tileServer.overlayUrl=function(){var e=localStorage.getItem("tileServerOverlay");return(e instanceof String||"string"==typeof e)&&e.match(/^https?:\/\//)?e:(localStorage.setItem("tileServerOverlay",""),"")},leafletUI.tileServer.opts={attribution:'&copy; <a href="https://joxit.github.io/">Joxit</a> and your tile server. <a href="https://joxit.github.io/tile-server-ui">tile-server-ui</a>.',maxZoom:22},leafletUI.tileServer.layer=L.tileLayer(leafletUI.tileServer.url(),leafletUI.tileServer.opts),leafletUI.tileServer.overlay=L.tileLayer(leafletUI.tileServer.overlayUrl(),leafletUI.tileServer.opts),leafletUI.tileServer.layer.addTo(leafletUI.map),leafletUI.tileServer.overlay.addTo(leafletUI.map),leafletUI.tileServer.layer.setUrlHistory=leafletUI.tileServer.overlay.setUrlHistory=function(e){this.setUrl(e);var t="?";leafletUI.tileServer.layer._url&&(t+="url="+leafletUI.encodeURI(leafletUI.tileServer.layer._url)),leafletUI.tileServer.overlay._url&&(t+="&overlay="+leafletUI.encodeURI(leafletUI.tileServer.overlay._url)),history.pushState(null,"",t+window.location.hash)},leafletUI.URL_QUERY_PARAM_REGEX=/[&?]url=/,leafletUI.URL_PARAM_REGEX=/^url=/,leafletUI.OVERLAY_QUERY_PARAM_REGEX=/[&?]overlay=/,leafletUI.OVERLAY_PARAM_REGEX=/^overlay=/,leafletUI.encodeURI=function(e){return e.indexOf("&")<0?window.encodeURI(e):btoa(e)},leafletUI.decodeURI=function(e){return e.startsWith("http")?window.decodeURI(e):atob(e)};var addTileServer=function(e){var t=leafletUI.tileServer.getServers();(!t||!t instanceof Array)&&(t=[]),e=e.trim(),t.indexOf(e)==-1&&(t.push(e),leafletUI.tileServer.servers=t,localStorage.setItem("tileServer",JSON.stringify(t)))},removeTileServer=function(e){var t=leafletUI.tileServer.getServers();(!t||!t instanceof Array)&&(t=[]),e=e.trim();var l=t.indexOf(e);l!=-1&&(t.splice(l,1),leafletUI.tileServer.servers=t,localStorage.setItem("tileServer",JSON.stringify(t)))},changeTileServer=function(e){var t=leafletUI.tileServer.getServers();(!t||!t instanceof Array)&&(t=[]),e=e.trim();var l=t.indexOf(e);l!=-1&&(t.splice(l,1),t=[e].concat(t),leafletUI.tileServer.servers=t,localStorage.setItem("tileServer",JSON.stringify(t)))};leafletUI.getQueryParamFunction=function(e,t){return function(){var l=window.location.search;if(e.test(l)){var r=l.split(/^\?|&/).find(function(e){return e&&t.test(e)});return r?r.replace(t,""):r}}},leafletUI.getUrlQueryParam=leafletUI.getQueryParamFunction(leafletUI.URL_QUERY_PARAM_REGEX,leafletUI.URL_PARAM_REGEX),leafletUI.getOverlayQueryParam=leafletUI.getQueryParamFunction(leafletUI.OVERLAY_QUERY_PARAM_REGEX,leafletUI.OVERLAY_PARAM_REGEX),riot.compile(function(){this.onload=function(){var e=leafletUI.getUrlQueryParam(),t=leafletUI.getOverlayQueryParam();if(e)try{leafletUI.tileServer.layer.setUrl(leafletUI.decodeURI(e))}catch(e){console.log(e)}if(t)try{leafletUI.tileServer.overlay.setUrl(leafletUI.decodeURI(t))}catch(e){console.log(e)}riot.mount("*")}}),leafletUI.control=leafletUI.control||{},leafletUI.control.add=L.Control.extend({options:{position:"bottomright"},onAdd:function(e){var t=L.DomUtil.create("material-button");return L.DomUtil.create("i","material-icons",t).textContent="add",t.id="add-tile-server-button",t.setAttribute("waves-center",!0),t.setAttribute("rounded",!0),t.setAttribute("waves-opacity",.6),t.setAttribute("waves-duration",600),t.setAttribute("shady",!0),t.addEventListener("click",function(){leafletUI.addTag.dialog.open()}),t}}),leafletUI.map.addControl(new leafletUI.control.add),leafletUI.control=leafletUI.control||{},leafletUI.control.menu=L.Control.extend({options:{position:"topright"},onAdd:function(e){return L.DomUtil.create("dropdown-menu","menu-control")}}),leafletUI.map.addControl(new leafletUI.control.menu),leafletUI.control=leafletUI.control||{},leafletUI.control.zoom=L.Control.extend({options:{position:"topleft",zoomIn:{text:"+",title:"Zoom in"},zoomOut:{text:"-",title:"Zoom out"},zoom:{text:leafletUI.map._zoom,title:"Current zoom"}},onAdd:function(e){var t=L.DomUtil.create("div","zoom-control"),l=this,r=function(e,r){var o=L.DomUtil.create("material-button","zoom-control-button",t);return o.setAttribute("shady",!0),o.innerHTML=e.text,o.title=e.title,r&&L.DomEvent.on(o,"click",r,l),L.DomEvent.disableClickPropagation(o),o};return this._zoomInButton=r(this.options.zoomIn,function(e){leafletUI.map.zoomIn(e.shiftKey?3:1)}),this._zoomOutButton=r(this.options.zoomOut,function(e){leafletUI.map.zoomOut(e.shiftKey?3:1)}),this._zoomButton=r(this.options.zoom),this._onZoomUpdate(),leafletUI.map.on("zoomend zoomlevelschange",this._onZoomUpdate,this),t},_onZoomUpdate:function(){this._zoomInButton.removeAttribute("disabled"),this._zoomOutButton.removeAttribute("disabled"),leafletUI.map._zoom===leafletUI.map.getMinZoom()&&this._zoomOutButton.setAttribute("disabled",""),leafletUI.map._zoom===leafletUI.map.getMaxZoom()&&this._zoomInButton.setAttribute("disabled",""),this._zoomButton.innerHTML=leafletUI.map._zoom||0}}),leafletUI.map.addControl(new leafletUI.control.zoom);